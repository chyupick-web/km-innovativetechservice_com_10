(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{111:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return l}));var r=t(2),o=t(6),i=(t(0),t(125)),a={id:"config-file",title:"Config File",sidebar_label:"Config File"},s={id:"config-file",title:"Config File",description:"An overview of the yaml configuration.",source:"@site/docs/config-yml.md",permalink:"/docs/config-file",editUrl:"https://github.com/coderoad/coderoad-vscode/edit/master/docs/docs/config-yml.md",sidebar_label:"Config File"},c=[],u={rightToc:c};function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"An overview of the yaml configuration."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# A configuration file for a CodeRoad Tutorial\n# This is a YAML-formatted file.\n\n## Your personal version of the tutorial\n##\nversion: '0.1.0'\n\n## Data used to populate the tutorial summary page\n##\nsummary:\n  ## The title of your tutorial. Required.\n  ##\n  title: ''\n  ## A description of your tutorial. Required.\n  ##\n  description: ''\n## Data used to configure and setup the tutorial\n##\nconfig:\n  ## Test runner setup.\n  testRunner:\n    ## The command called to run the test runner. For example \"npm run test\", or a path to the test runner binary. Required.\n    command: ./node_modules/.bin/mocha\n    ## Standard arguments used by a given test runner\n    args:\n      ## The command arg used to filter tests. Used by \"subtasks\"\n      filter: --grep\n      ## The command arg used to convert test runner output to TAP format. See https://testanything.org/ for more. Required.\n      tap: --reporter=mocha-tap-reporter\n    ## The directory where to run the test runner from. If not specified, tests will run from the root of the project. Optional.\n    directory: coderoad\n    ## App versions helps to ensure compatability with the Extension\n    appVersions:\n      ## Ensure compatability with a minimal VSCode CodeRoad version\n      vscode: '>=0.7.0'\n  ## Setup commands\n  setup:\n    ## A list of commands to run to configure the tutorial\n    commands:\n      - npm install\n  ## Repo information to load code from\n  ##\n  repo:\n    ## The uri path to the repo containing the code commits. Required.\n    uri: https://github.com/coderoad/fcc-learn-npm\n    ## The branch on the repo uri that contains the code commits. Required.\n    branch: v0.4.1\n  ## A list of tutorial dependencies to ensure the environment is setup for the tutorial. Optional.\n  ## The dependencies will be checked by running `dependency.name` --version and comparing it to the version provided.\n  ##\n  dependencies:\n    ## The name of the dependency\n    - name: node\n      ## The version requirement. See https://github.com/npm/node-semver for options.\n      version: '>=10'\n## A level is made up of\nlevels:\n  - id: '1'\n    steps:\n      ## Example 1: Opening files\n      - id: '1.1'\n        ## Setup for the first task. Required.\n        setup:\n          ## Files to open in a text editor when the task loads. Optional.\n          files:\n            - package.json\n        ## Solution for the first task. Required.\n        solution:\n          ## Files to open when the solution loads. Optional.\n          files:\n            - package.json\n      ## Example Two: Running commands\n      - id: '1.2'\n        setup:\n          ## CLI commands that are run when the task loads. Optional.\n          commands:\n            - npm install\n        solution:\n          commits:\n            - commit6\n          commands:\n            - npm install\n      ## Example Three: Watchers\n      - id: '1.3'\n        setup:\n          files:\n            - package.json\n          ## Listeners that run tests when a file or directory changes.\n          watchers:\n            - package.json\n            - node_modules/some-package\n        solution:\n          files:\n            - package.json\n          commits:\n            - commit8\n  - id: '2'\n    steps:\n      - id: '2.1'\n")))}l.isMDXComponent=!0},125:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),l=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s({},n,{},e)),t},p=function(e){var n=l(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,f=p["".concat(a,".").concat(m)]||p[m]||d[m]||i;return t?o.a.createElement(f,s({ref:n},u,{components:t})):o.a.createElement(f,s({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<i;u++)a[u]=t[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);